body {
    font-family: 'Courier New', Courier, monospace;
    text-align: center;
}

/* Title */

#title-container {
    display: flex;
    flex-flow: row wrap;
    justify-content: center;
}

h1 {
    padding: 1rem;
}

#edit-icon {
    height: 2rem;
    position: relative;
    border-radius: 100%;
    padding: 0.5rem;
}

.edit-mode {
    background-color: #fdf496;
}

.edit-mode:hover {
    border: 1px solid black;
}

.read-mode {
    background-color: white;
}

.read-mode:hover {
    border: 1px solid #99934a;
}


#edit-icon-box {
    display: flex;
    flex-flow: column;
    justify-content: center;
    align-items: baseline;
}


/* Table */

#table-container {
    display: flex;
    flex-flow: column;
    flex : 1;
}

#task-table, th, td {
    border: 1px solid black;
    border-color: #efecee;
    border-collapse: collapse;
    background-color: transparent;
}

#task-table {
    margin-left: auto;
    margin-right: auto;
    width: 90%;
    margin-bottom: 1rem;
}

th {
    height: 2rem;
    padding: 10px 20px;
}


td {
    padding: 5px 10px;
    max-width: 20ch; 
    word-wrap: break-word;
    white-space: pre-wrap;
}

#wrapper {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}

#new-task-form-container {
    /* background-image: url("images/watercolor.png");
    background-repeat: no-repeat;
    background-size: cover; */
    position: sticky;
    bottom: 0;
    left: 0;
    width: 100%;
    background-color: rgb(231, 251, 229);
    padding: 2rem;
}

#task-table>tr>:nth-child(1), #task-table>tr>:nth-child(2){ 
    /* your css here */
    min-width: max-content;
}

.left-align {
    text-align: left;
}

input[type=submit] {
  padding: 13px 20px 13px;
  outline: 0;
  border: 1px solid black;
  cursor: pointer;
  position: relative;
  background-color: rgba(0, 0, 0, 0);
  touch-action: manipulation;
}


#add-new-task:hover {
    background-color: white;
}


.submit-text-edits {
    width: 100%;
}

.submit-text-edits:hover {
    background-color: white;
}

.submit-date-edits {
    visibility: hidden;
}

.checkbox-img {
    height: 1rem;
}


.checkbox-img:hover {
    padding: 0.5rem;
    border-radius: 30%;
    background-color: rgba(0, 128, 0, 0.094);
}

tr:hover {
    background-color: aliceblue;
    color: cornflowerblue;
}

#header-row:hover {
    background-color: #f9ccdc25;
    color: black;
}

.delete-button {
    height: 1rem;
    padding: 0.5rem;
}

.delete-button:hover {
    border-radius: 30%;
    background-color: rgba(255, 0, 0, 0.124);
}

.complete-task {
    text-decoration: line-through;
}

.complete-row {
    color: rgba(81, 19, 61, 0.53);
}

textarea {
    min-height: 10rem;
}

/* Copied from https://css-tricks.com/the-cleanest-trick-for-autogrowing-textareas/ */

.grow-wrap {
    /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
    display: grid;
  }
  .grow-wrap::after {
    /* Note the weird space! Needed to preventy jumpy behavior */
    content: attr(data-replicated-value) " ";
  
    /* This is how textarea text behaves */
    white-space: pre-wrap;
  
    /* Hidden from view, clicks, and screen readers */
    visibility: hidden;
  }
  .grow-wrap > textarea {
    /* You could leave this, but after a user resizes, then it ruins the auto sizing */
    resize: none;
}
  
    /* Firefox shows scrollbar on growth, you can hide like this. */
    /* overflow: hidden; */
  }
  .grow-wrap > textarea,
  .grow-wrap::after {
    /* Identical styling required!! */
    border: 1px solid black;
    border-bottom: transparent;
    font: inherit;
  
    /* Place on top of each other */
    grid-area: 1 / 1 / 2 / 2;
  }